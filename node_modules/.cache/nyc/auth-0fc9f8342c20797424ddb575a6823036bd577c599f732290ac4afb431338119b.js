function cov_n3rxzid55(){var path="C:\\Users\\Ronald\\Desktop\\UNSW\\Y2T1\\SENG2021\\Anemone\\src\\main\\server\\auth.js";var hash="04636d298ba2e1fe2ff4ee75d044e4522b18e997";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"C:\\Users\\Ronald\\Desktop\\UNSW\\Y2T1\\SENG2021\\Anemone\\src\\main\\server\\auth.js",statementMap:{"0":{start:{line:1,column:14},end:{line:1,column:35}},"1":{start:{line:2,column:13},end:{line:2,column:37}},"2":{start:{line:3,column:20},end:{line:3,column:49}},"3":{start:{line:4,column:13},end:{line:4,column:30}},"4":{start:{line:7,column:19},end:{line:7,column:38}},"5":{start:{line:11,column:22},end:{line:11,column:32}},"6":{start:{line:13,column:21},end:{line:13,column:43}},"7":{start:{line:15,column:22},end:{line:15,column:64}},"8":{start:{line:16,column:18},end:{line:16,column:47}},"9":{start:{line:18,column:19},end:{line:18,column:39}},"10":{start:{line:20,column:4},end:{line:24,column:7}},"11":{start:{line:26,column:4},end:{line:26,column:33}},"12":{start:{line:28,column:4},end:{line:28,column:19}},"13":{start:{line:33,column:21},end:{line:33,column:41}},"14":{start:{line:34,column:16},end:{line:34,column:65}},"15":{start:{line:34,column:39},end:{line:34,column:64}},"16":{start:{line:37,column:4},end:{line:41,column:5}},"17":{start:{line:38,column:8},end:{line:40,column:10}},"18":{start:{line:43,column:4},end:{line:46,column:6}},"19":{start:{line:50,column:19},end:{line:50,column:39}},"20":{start:{line:51,column:22},end:{line:51,column:32}},"21":{start:{line:53,column:23},end:{line:53,column:45}},"22":{start:{line:55,column:24},end:{line:55,column:66}},"23":{start:{line:56,column:20},end:{line:56,column:49}},"24":{start:{line:57,column:4},end:{line:68,column:5}},"25":{start:{line:58,column:8},end:{line:61,column:44}},"26":{start:{line:62,column:8},end:{line:62,column:23}},"27":{start:{line:64,column:8},end:{line:64,column:58}},"28":{start:{line:65,column:8},end:{line:65,column:20}},"29":{start:{line:67,column:8},end:{line:67,column:25}},"30":{start:{line:73,column:19},end:{line:73,column:39}},"31":{start:{line:74,column:4},end:{line:100,column:5}},"32":{start:{line:75,column:22},end:{line:75,column:101}},"33":{start:{line:78,column:8},end:{line:82,column:9}},"34":{start:{line:79,column:12},end:{line:81,column:14}},"35":{start:{line:85,column:8},end:{line:89,column:9}},"36":{start:{line:86,column:12},end:{line:88,column:14}},"37":{start:{line:91,column:8},end:{line:94,column:10}},"38":{start:{line:96,column:8},end:{line:96,column:58}},"39":{start:{line:97,column:8},end:{line:97,column:20}},"40":{start:{line:99,column:8},end:{line:99,column:25}},"41":{start:{line:104,column:19},end:{line:104,column:39}},"42":{start:{line:105,column:4},end:{line:118,column:5}},"43":{start:{line:106,column:24},end:{line:106,column:106}},"44":{start:{line:107,column:20},end:{line:107,column:43}},"45":{start:{line:109,column:8},end:{line:111,column:11}},"46":{start:{line:110,column:12},end:{line:110,column:25}},"47":{start:{line:112,column:8},end:{line:112,column:19}},"48":{start:{line:114,column:8},end:{line:114,column:58}},"49":{start:{line:115,column:8},end:{line:115,column:20}},"50":{start:{line:117,column:8},end:{line:117,column:25}},"51":{start:{line:122,column:19},end:{line:122,column:39}},"52":{start:{line:123,column:4},end:{line:138,column:5}},"53":{start:{line:124,column:24},end:{line:124,column:106}},"54":{start:{line:125,column:20},end:{line:125,column:43}},"55":{start:{line:127,column:8},end:{line:131,column:11}},"56":{start:{line:128,column:12},end:{line:128,column:46}},"57":{start:{line:129,column:28},end:{line:129,column:48}},"58":{start:{line:130,column:12},end:{line:130,column:59}},"59":{start:{line:132,column:8},end:{line:132,column:115}},"60":{start:{line:134,column:8},end:{line:134,column:61}},"61":{start:{line:135,column:8},end:{line:135,column:20}},"62":{start:{line:137,column:8},end:{line:137,column:25}},"63":{start:{line:142,column:19},end:{line:142,column:39}},"64":{start:{line:143,column:4},end:{line:158,column:5}},"65":{start:{line:144,column:24},end:{line:144,column:106}},"66":{start:{line:145,column:20},end:{line:145,column:43}},"67":{start:{line:147,column:8},end:{line:151,column:11}},"68":{start:{line:148,column:12},end:{line:148,column:49}},"69":{start:{line:149,column:28},end:{line:149,column:48}},"70":{start:{line:150,column:12},end:{line:150,column:59}},"71":{start:{line:152,column:8},end:{line:152,column:115}},"72":{start:{line:154,column:8},end:{line:154,column:61}},"73":{start:{line:155,column:8},end:{line:155,column:20}},"74":{start:{line:157,column:8},end:{line:157,column:25}},"75":{start:{line:162,column:19},end:{line:162,column:39}},"76":{start:{line:163,column:4},end:{line:178,column:5}},"77":{start:{line:164,column:24},end:{line:164,column:106}},"78":{start:{line:165,column:20},end:{line:165,column:43}},"79":{start:{line:167,column:8},end:{line:171,column:11}},"80":{start:{line:168,column:12},end:{line:168,column:42}},"81":{start:{line:169,column:28},end:{line:169,column:48}},"82":{start:{line:170,column:12},end:{line:170,column:59}},"83":{start:{line:172,column:8},end:{line:172,column:115}},"84":{start:{line:174,column:8},end:{line:174,column:61}},"85":{start:{line:175,column:8},end:{line:175,column:20}},"86":{start:{line:177,column:8},end:{line:177,column:25}},"87":{start:{line:181,column:0},end:{line:181,column:143}}},fnMap:{"0":{name:"generateToken",decl:{start:{line:10,column:9},end:{line:10,column:22}},loc:{start:{line:10,column:33},end:{line:29,column:1}},line:10},"1":{name:"tokenIsValid",decl:{start:{line:32,column:9},end:{line:32,column:21}},loc:{start:{line:32,column:31},end:{line:47,column:1}},line:32},"2":{name:"(anonymous_2)",decl:{start:{line:34,column:30},end:{line:34,column:31}},loc:{start:{line:34,column:39},end:{line:34,column:64}},line:34},"3":{name:"generateTokenV2",decl:{start:{line:49,column:15},end:{line:49,column:30}},loc:{start:{line:49,column:41},end:{line:69,column:1}},line:49},"4":{name:"tokenIsValidV2",decl:{start:{line:72,column:15},end:{line:72,column:29}},loc:{start:{line:72,column:39},end:{line:101,column:1}},line:72},"5":{name:"fetchXMLData",decl:{start:{line:103,column:15},end:{line:103,column:27}},loc:{start:{line:103,column:39},end:{line:119,column:1}},line:103},"6":{name:"(anonymous_6)",decl:{start:{line:109,column:25},end:{line:109,column:26}},loc:{start:{line:109,column:48},end:{line:111,column:9}},line:109},"7":{name:"modifyXMLAmount",decl:{start:{line:121,column:15},end:{line:121,column:30}},loc:{start:{line:121,column:53},end:{line:139,column:1}},line:121},"8":{name:"(anonymous_8)",decl:{start:{line:127,column:25},end:{line:127,column:26}},loc:{start:{line:127,column:48},end:{line:131,column:9}},line:127},"9":{name:"modifyXMLName",decl:{start:{line:141,column:15},end:{line:141,column:28}},loc:{start:{line:141,column:49},end:{line:159,column:1}},line:141},"10":{name:"(anonymous_10)",decl:{start:{line:147,column:25},end:{line:147,column:26}},loc:{start:{line:147,column:48},end:{line:151,column:9}},line:147},"11":{name:"modifyXMLDate",decl:{start:{line:161,column:15},end:{line:161,column:28}},loc:{start:{line:161,column:49},end:{line:179,column:1}},line:161},"12":{name:"(anonymous_12)",decl:{start:{line:167,column:25},end:{line:167,column:26}},loc:{start:{line:167,column:48},end:{line:171,column:9}},line:167}},branchMap:{"0":{loc:{start:{line:37,column:4},end:{line:41,column:5}},type:"if",locations:[{start:{line:37,column:4},end:{line:41,column:5}},{start:{line:37,column:4},end:{line:41,column:5}}],line:37},"1":{loc:{start:{line:37,column:8},end:{line:37,column:60}},type:"binary-expr",locations:[{start:{line:37,column:8},end:{line:37,column:27}},{start:{line:37,column:31},end:{line:37,column:60}}],line:37},"2":{loc:{start:{line:78,column:8},end:{line:82,column:9}},type:"if",locations:[{start:{line:78,column:8},end:{line:82,column:9}},{start:{line:78,column:8},end:{line:82,column:9}}],line:78},"3":{loc:{start:{line:85,column:8},end:{line:89,column:9}},type:"if",locations:[{start:{line:85,column:8},end:{line:89,column:9}},{start:{line:85,column:8},end:{line:89,column:9}}],line:85}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0},b:{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"04636d298ba2e1fe2ff4ee75d044e4522b18e997"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_n3rxzid55=function(){return actualCoverage;};}return actualCoverage;}cov_n3rxzid55();const other=(cov_n3rxzid55().s[0]++,require("./other.js"));const pool=(cov_n3rxzid55().s[1]++,require("./database.js"));const parseString=(cov_n3rxzid55().s[2]++,require("xml2js").parseString);var xml2js=(cov_n3rxzid55().s[3]++,require("xml2js"));// Constants
const ONE_DAY_MS=(cov_n3rxzid55().s[4]++,24*60*60*1000);// Generate a unique token wtih expiration time and adds it to the valid tokens list
function generateToken(username){cov_n3rxzid55().f[0]++;const timestamp=(cov_n3rxzid55().s[5]++,Date.now()),// Expiration time of 1 day from now
expiration=(cov_n3rxzid55().s[6]++,timestamp+ONE_DAY_MS),// Generates a base-36 string and then extracts 16 digits
tokenString=(cov_n3rxzid55().s[7]++,Math.random().toString(36).substring(2,17)),tokenId=(cov_n3rxzid55().s[8]++,`${timestamp}_${tokenString}`),jsonData=(cov_n3rxzid55().s[9]++,other.getTokenData());cov_n3rxzid55().s[10]++;jsonData.push({tokenId,username,expiration});cov_n3rxzid55().s[11]++;other.setTokenData(jsonData);cov_n3rxzid55().s[12]++;return tokenId;}// Authenticates that a token is valid, returns a boolean value + corresponding user
function tokenIsValid(tokenId){cov_n3rxzid55().f[1]++;const jsonData=(cov_n3rxzid55().s[13]++,other.getTokenData()),token=(cov_n3rxzid55().s[14]++,jsonData.find(token=>{cov_n3rxzid55().f[2]++;cov_n3rxzid55().s[15]++;return token.tokenId===tokenId;}));// Could not find token or token has expired
cov_n3rxzid55().s[16]++;if((cov_n3rxzid55().b[1][0]++,token===undefined)||(cov_n3rxzid55().b[1][1]++,token.expiration<Date.now())){cov_n3rxzid55().b[0][0]++;cov_n3rxzid55().s[17]++;return{valid:false};}else{cov_n3rxzid55().b[0][1]++;}cov_n3rxzid55().s[18]++;return{valid:true,username:token.username};}async function generateTokenV2(username){cov_n3rxzid55().f[3]++;const client=(cov_n3rxzid55().s[19]++,await pool.connect());const timestamp=(cov_n3rxzid55().s[20]++,Date.now());// Expiration time of 1 day from now
const expiration=(cov_n3rxzid55().s[21]++,timestamp+ONE_DAY_MS);// Generates a base-36 string and then extracts 16 digits
const tokenString=(cov_n3rxzid55().s[22]++,Math.random().toString(36).substring(2,17));const tokenId=(cov_n3rxzid55().s[23]++,`${timestamp}_${tokenString}`);cov_n3rxzid55().s[24]++;try{cov_n3rxzid55().s[25]++;await client.query(`
        INSERT INTO tokens (tokenId, username, expiration)
        VALUES ($1, $2, $3)
        `,[tokenId,username,expiration]);cov_n3rxzid55().s[26]++;return tokenId;}catch(error){cov_n3rxzid55().s[27]++;console.error("Failed to generate token:",error);cov_n3rxzid55().s[28]++;throw error;}finally{cov_n3rxzid55().s[29]++;client.release();}}// Authenticates that a token is valid, returns a boolean value + corresponding user
async function tokenIsValidV2(tokenId){cov_n3rxzid55().f[4]++;const client=(cov_n3rxzid55().s[30]++,await pool.connect());cov_n3rxzid55().s[31]++;try{const token=(cov_n3rxzid55().s[32]++,await client.query("SELECT * FROM tokens WHERE tokens.tokenId = $1",[tokenId]));// Could not find token
cov_n3rxzid55().s[33]++;if(token.rows.length===0){cov_n3rxzid55().b[2][0]++;cov_n3rxzid55().s[34]++;return{valid:false};}else{cov_n3rxzid55().b[2][1]++;}// Token has expired
cov_n3rxzid55().s[35]++;if(token.rows[0].expiration<Date.now()){cov_n3rxzid55().b[3][0]++;cov_n3rxzid55().s[36]++;return{valid:false};}else{cov_n3rxzid55().b[3][1]++;}cov_n3rxzid55().s[37]++;return{valid:true,username:token.rows[0].username};}catch(error){cov_n3rxzid55().s[38]++;console.error("Failed to validate token:",error);cov_n3rxzid55().s[39]++;throw error;}finally{cov_n3rxzid55().s[40]++;client.release();}}async function fetchXMLData(invoiceId){cov_n3rxzid55().f[5]++;const client=(cov_n3rxzid55().s[41]++,await pool.connect());cov_n3rxzid55().s[42]++;try{const invoice=(cov_n3rxzid55().s[43]++,await client.query("SELECT * FROM invoices i WHERE i.invoiceId = $1",[invoiceId]));const xml=(cov_n3rxzid55().s[44]++,invoice.rows[0].invoice);let res;cov_n3rxzid55().s[45]++;parseString(xml,function(err,result){cov_n3rxzid55().f[6]++;cov_n3rxzid55().s[46]++;res=result;});cov_n3rxzid55().s[47]++;return res;}catch(error){cov_n3rxzid55().s[48]++;console.error("Failed to fetch XML data:",error);cov_n3rxzid55().s[49]++;throw error;}finally{cov_n3rxzid55().s[50]++;client.release();}}async function modifyXMLAmount(invoiceId,NewAmount){cov_n3rxzid55().f[7]++;const client=(cov_n3rxzid55().s[51]++,await pool.connect());cov_n3rxzid55().s[52]++;try{const invoice=(cov_n3rxzid55().s[53]++,await client.query("SELECT * FROM invoices i WHERE i.invoiceId = $1",[invoiceId]));const xml=(cov_n3rxzid55().s[54]++,invoice.rows[0].invoice);let updatedXmlString;cov_n3rxzid55().s[55]++;parseString(xml,function(err,result){cov_n3rxzid55().f[8]++;cov_n3rxzid55().s[56]++;result.invoice.amount=NewAmount;const builder=(cov_n3rxzid55().s[57]++,new xml2js.Builder());cov_n3rxzid55().s[58]++;updatedXmlString=builder.buildObject(result);});cov_n3rxzid55().s[59]++;await client.query("UPDATE invoices SET invoice = $1 WHERE invoiceid = $2",[updatedXmlString,invoiceId]);}catch(error){cov_n3rxzid55().s[60]++;console.error("Failed to update XML amount:",error);cov_n3rxzid55().s[61]++;throw error;}finally{cov_n3rxzid55().s[62]++;client.release();}}async function modifyXMLName(invoiceId,NewName){cov_n3rxzid55().f[9]++;const client=(cov_n3rxzid55().s[63]++,await pool.connect());cov_n3rxzid55().s[64]++;try{const invoice=(cov_n3rxzid55().s[65]++,await client.query("SELECT * FROM invoices i WHERE i.invoiceId = $1",[invoiceId]));const xml=(cov_n3rxzid55().s[66]++,invoice.rows[0].invoice);let updatedXmlString;cov_n3rxzid55().s[67]++;parseString(xml,function(err,result){cov_n3rxzid55().f[10]++;cov_n3rxzid55().s[68]++;result.invoice.invoiceName=NewName;const builder=(cov_n3rxzid55().s[69]++,new xml2js.Builder());cov_n3rxzid55().s[70]++;updatedXmlString=builder.buildObject(result);});cov_n3rxzid55().s[71]++;await client.query("UPDATE invoices SET invoice = $1 WHERE invoiceid = $2",[updatedXmlString,invoiceId]);}catch(error){cov_n3rxzid55().s[72]++;console.error("Failed to update XML amount:",error);cov_n3rxzid55().s[73]++;throw error;}finally{cov_n3rxzid55().s[74]++;client.release();}}async function modifyXMLDate(invoiceId,NewDate){cov_n3rxzid55().f[11]++;const client=(cov_n3rxzid55().s[75]++,await pool.connect());cov_n3rxzid55().s[76]++;try{const invoice=(cov_n3rxzid55().s[77]++,await client.query("SELECT * FROM invoices i WHERE i.invoiceId = $1",[invoiceId]));const xml=(cov_n3rxzid55().s[78]++,invoice.rows[0].invoice);let updatedXmlString;cov_n3rxzid55().s[79]++;parseString(xml,function(err,result){cov_n3rxzid55().f[12]++;cov_n3rxzid55().s[80]++;result.invoice.date=NewDate;const builder=(cov_n3rxzid55().s[81]++,new xml2js.Builder());cov_n3rxzid55().s[82]++;updatedXmlString=builder.buildObject(result);});cov_n3rxzid55().s[83]++;await client.query("UPDATE invoices SET invoice = $1 WHERE invoiceid = $2",[updatedXmlString,invoiceId]);}catch(error){cov_n3rxzid55().s[84]++;console.error("Failed to update XML amount:",error);cov_n3rxzid55().s[85]++;throw error;}finally{cov_n3rxzid55().s[86]++;client.release();}}cov_n3rxzid55().s[87]++;module.exports={generateToken,tokenIsValid,generateTokenV2,tokenIsValidV2,fetchXMLData,modifyXMLAmount,modifyXMLName,modifyXMLDate};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfbjNyeHppZDU1IiwiYWN0dWFsQ292ZXJhZ2UiLCJvdGhlciIsInMiLCJyZXF1aXJlIiwicG9vbCIsInBhcnNlU3RyaW5nIiwieG1sMmpzIiwiT05FX0RBWV9NUyIsImdlbmVyYXRlVG9rZW4iLCJ1c2VybmFtZSIsImYiLCJ0aW1lc3RhbXAiLCJEYXRlIiwibm93IiwiZXhwaXJhdGlvbiIsInRva2VuU3RyaW5nIiwiTWF0aCIsInJhbmRvbSIsInRvU3RyaW5nIiwic3Vic3RyaW5nIiwidG9rZW5JZCIsImpzb25EYXRhIiwiZ2V0VG9rZW5EYXRhIiwicHVzaCIsInNldFRva2VuRGF0YSIsInRva2VuSXNWYWxpZCIsInRva2VuIiwiZmluZCIsImIiLCJ1bmRlZmluZWQiLCJ2YWxpZCIsImdlbmVyYXRlVG9rZW5WMiIsImNsaWVudCIsImNvbm5lY3QiLCJxdWVyeSIsImVycm9yIiwiY29uc29sZSIsInJlbGVhc2UiLCJ0b2tlbklzVmFsaWRWMiIsInJvd3MiLCJsZW5ndGgiLCJmZXRjaFhNTERhdGEiLCJpbnZvaWNlSWQiLCJpbnZvaWNlIiwieG1sIiwicmVzIiwiZXJyIiwicmVzdWx0IiwibW9kaWZ5WE1MQW1vdW50IiwiTmV3QW1vdW50IiwidXBkYXRlZFhtbFN0cmluZyIsImFtb3VudCIsImJ1aWxkZXIiLCJCdWlsZGVyIiwiYnVpbGRPYmplY3QiLCJtb2RpZnlYTUxOYW1lIiwiTmV3TmFtZSIsImludm9pY2VOYW1lIiwibW9kaWZ5WE1MRGF0ZSIsIk5ld0RhdGUiLCJkYXRlIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJzb3VyY2VzIjpbImF1dGguanMiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3Qgb3RoZXIgPSByZXF1aXJlKFwiLi9vdGhlci5qc1wiKTtcclxuY29uc3QgcG9vbCA9IHJlcXVpcmUoXCIuL2RhdGFiYXNlLmpzXCIpO1xyXG5jb25zdCBwYXJzZVN0cmluZyA9IHJlcXVpcmUoXCJ4bWwyanNcIikucGFyc2VTdHJpbmc7XHJcbnZhciB4bWwyanMgPSByZXF1aXJlKFwieG1sMmpzXCIpO1xyXG5cclxuLy8gQ29uc3RhbnRzXHJcbmNvbnN0IE9ORV9EQVlfTVMgPSAyNCAqIDYwICogNjAgKiAxMDAwO1xyXG5cclxuLy8gR2VuZXJhdGUgYSB1bmlxdWUgdG9rZW4gd3RpaCBleHBpcmF0aW9uIHRpbWUgYW5kIGFkZHMgaXQgdG8gdGhlIHZhbGlkIHRva2VucyBsaXN0XHJcbmZ1bmN0aW9uIGdlbmVyYXRlVG9rZW4odXNlcm5hbWUpIHtcclxuICAgIGNvbnN0IHRpbWVzdGFtcCA9IERhdGUubm93KCksXHJcbiAgICAgICAgLy8gRXhwaXJhdGlvbiB0aW1lIG9mIDEgZGF5IGZyb20gbm93XHJcbiAgICAgICAgZXhwaXJhdGlvbiA9IHRpbWVzdGFtcCArIE9ORV9EQVlfTVMsXHJcbiAgICAgICAgLy8gR2VuZXJhdGVzIGEgYmFzZS0zNiBzdHJpbmcgYW5kIHRoZW4gZXh0cmFjdHMgMTYgZGlnaXRzXHJcbiAgICAgICAgdG9rZW5TdHJpbmcgPSBNYXRoLnJhbmRvbSgpLnRvU3RyaW5nKDM2KS5zdWJzdHJpbmcoMiwxNyksXHJcbiAgICAgICAgdG9rZW5JZCA9IGAke3RpbWVzdGFtcH1fJHt0b2tlblN0cmluZ31gLFxyXG5cclxuICAgICAgICBqc29uRGF0YSA9IG90aGVyLmdldFRva2VuRGF0YSgpO1xyXG5cclxuICAgIGpzb25EYXRhLnB1c2goe1xyXG4gICAgICAgIHRva2VuSWQsXHJcbiAgICAgICAgdXNlcm5hbWUsXHJcbiAgICAgICAgZXhwaXJhdGlvblxyXG4gICAgfSk7XHJcblxyXG4gICAgb3RoZXIuc2V0VG9rZW5EYXRhKGpzb25EYXRhKTtcclxuXHJcbiAgICByZXR1cm4gdG9rZW5JZDtcclxufVxyXG5cclxuLy8gQXV0aGVudGljYXRlcyB0aGF0IGEgdG9rZW4gaXMgdmFsaWQsIHJldHVybnMgYSBib29sZWFuIHZhbHVlICsgY29ycmVzcG9uZGluZyB1c2VyXHJcbmZ1bmN0aW9uIHRva2VuSXNWYWxpZCh0b2tlbklkKSB7XHJcbiAgICBjb25zdCBqc29uRGF0YSA9IG90aGVyLmdldFRva2VuRGF0YSgpLFxyXG4gICAgICAgIHRva2VuID0ganNvbkRhdGEuZmluZCh0b2tlbiA9PiB0b2tlbi50b2tlbklkID09PSB0b2tlbklkKTtcclxuXHJcbiAgICAvLyBDb3VsZCBub3QgZmluZCB0b2tlbiBvciB0b2tlbiBoYXMgZXhwaXJlZFxyXG4gICAgaWYgKHRva2VuID09PSB1bmRlZmluZWQgfHwgdG9rZW4uZXhwaXJhdGlvbiA8IERhdGUubm93KCkpIHtcclxuICAgICAgICByZXR1cm4ge1xyXG4gICAgICAgICAgICB2YWxpZDogZmFsc2VcclxuICAgICAgICB9O1xyXG4gICAgfVxyXG5cclxuICAgIHJldHVybiB7XHJcbiAgICAgICAgdmFsaWQ6IHRydWUsXHJcbiAgICAgICAgdXNlcm5hbWU6IHRva2VuLnVzZXJuYW1lXHJcbiAgICB9O1xyXG59XHJcblxyXG5hc3luYyBmdW5jdGlvbiBnZW5lcmF0ZVRva2VuVjIodXNlcm5hbWUpIHtcclxuICAgIGNvbnN0IGNsaWVudCA9IGF3YWl0IHBvb2wuY29ubmVjdCgpO1xyXG4gICAgY29uc3QgdGltZXN0YW1wID0gRGF0ZS5ub3coKTtcclxuICAgIC8vIEV4cGlyYXRpb24gdGltZSBvZiAxIGRheSBmcm9tIG5vd1xyXG4gICAgY29uc3QgZXhwaXJhdGlvbiA9IHRpbWVzdGFtcCArIE9ORV9EQVlfTVM7XHJcbiAgICAvLyBHZW5lcmF0ZXMgYSBiYXNlLTM2IHN0cmluZyBhbmQgdGhlbiBleHRyYWN0cyAxNiBkaWdpdHNcclxuICAgIGNvbnN0IHRva2VuU3RyaW5nID0gTWF0aC5yYW5kb20oKS50b1N0cmluZygzNikuc3Vic3RyaW5nKDIsMTcpO1xyXG4gICAgY29uc3QgdG9rZW5JZCA9IGAke3RpbWVzdGFtcH1fJHt0b2tlblN0cmluZ31gO1xyXG4gICAgdHJ5IHtcclxuICAgICAgICBhd2FpdCBjbGllbnQucXVlcnkoYFxyXG4gICAgICAgIElOU0VSVCBJTlRPIHRva2VucyAodG9rZW5JZCwgdXNlcm5hbWUsIGV4cGlyYXRpb24pXHJcbiAgICAgICAgVkFMVUVTICgkMSwgJDIsICQzKVxyXG4gICAgICAgIGAsIFt0b2tlbklkLCB1c2VybmFtZSwgZXhwaXJhdGlvbl0pO1xyXG4gICAgICAgIHJldHVybiB0b2tlbklkO1xyXG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgICAgICBjb25zb2xlLmVycm9yKFwiRmFpbGVkIHRvIGdlbmVyYXRlIHRva2VuOlwiLCBlcnJvcik7XHJcbiAgICAgICAgdGhyb3cgZXJyb3I7XHJcbiAgICB9IGZpbmFsbHkge1xyXG4gICAgICAgIGNsaWVudC5yZWxlYXNlKCk7XHJcbiAgICB9XHJcbn1cclxuXHJcbi8vIEF1dGhlbnRpY2F0ZXMgdGhhdCBhIHRva2VuIGlzIHZhbGlkLCByZXR1cm5zIGEgYm9vbGVhbiB2YWx1ZSArIGNvcnJlc3BvbmRpbmcgdXNlclxyXG5hc3luYyBmdW5jdGlvbiB0b2tlbklzVmFsaWRWMih0b2tlbklkKSB7XHJcbiAgICBjb25zdCBjbGllbnQgPSBhd2FpdCBwb29sLmNvbm5lY3QoKTtcclxuICAgIHRyeSB7XHJcbiAgICAgICAgY29uc3QgdG9rZW4gPSBhd2FpdCBjbGllbnQucXVlcnkoXCJTRUxFQ1QgKiBGUk9NIHRva2VucyBXSEVSRSB0b2tlbnMudG9rZW5JZCA9ICQxXCIsIFt0b2tlbklkXSk7XHJcblxyXG4gICAgICAgIC8vIENvdWxkIG5vdCBmaW5kIHRva2VuXHJcbiAgICAgICAgaWYgKHRva2VuLnJvd3MubGVuZ3RoID09PSAwKSB7XHJcbiAgICAgICAgICAgIHJldHVybiB7XHJcbiAgICAgICAgICAgICAgICB2YWxpZDogZmFsc2VcclxuICAgICAgICAgICAgfTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIC8vIFRva2VuIGhhcyBleHBpcmVkXHJcbiAgICAgICAgaWYgKHRva2VuLnJvd3NbMF0uZXhwaXJhdGlvbiA8IERhdGUubm93KCkpIHtcclxuICAgICAgICAgICAgcmV0dXJuIHtcclxuICAgICAgICAgICAgICAgIHZhbGlkOiBmYWxzZVxyXG4gICAgICAgICAgICB9O1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgcmV0dXJuIHtcclxuICAgICAgICAgICAgdmFsaWQ6IHRydWUsXHJcbiAgICAgICAgICAgIHVzZXJuYW1lOiB0b2tlbi5yb3dzWzBdLnVzZXJuYW1lXHJcbiAgICAgICAgfTtcclxuICAgIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICAgICAgY29uc29sZS5lcnJvcihcIkZhaWxlZCB0byB2YWxpZGF0ZSB0b2tlbjpcIiwgZXJyb3IpO1xyXG4gICAgICAgIHRocm93IGVycm9yO1xyXG4gICAgfSBmaW5hbGx5IHtcclxuICAgICAgICBjbGllbnQucmVsZWFzZSgpO1xyXG4gICAgfVxyXG59XHJcblxyXG5hc3luYyBmdW5jdGlvbiBmZXRjaFhNTERhdGEoaW52b2ljZUlkKSB7XHJcbiAgICBjb25zdCBjbGllbnQgPSBhd2FpdCBwb29sLmNvbm5lY3QoKTtcclxuICAgIHRyeSB7XHJcbiAgICAgICAgY29uc3QgaW52b2ljZSA9IGF3YWl0IGNsaWVudC5xdWVyeShcIlNFTEVDVCAqIEZST00gaW52b2ljZXMgaSBXSEVSRSBpLmludm9pY2VJZCA9ICQxXCIsIFtpbnZvaWNlSWRdKTtcclxuICAgICAgICBjb25zdCB4bWwgPSBpbnZvaWNlLnJvd3NbMF0uaW52b2ljZTtcclxuICAgICAgICBsZXQgcmVzO1xyXG4gICAgICAgIHBhcnNlU3RyaW5nKHhtbCwgZnVuY3Rpb24gKGVyciwgcmVzdWx0KSB7XHJcbiAgICAgICAgICAgIHJlcyA9IHJlc3VsdDtcclxuICAgICAgICB9KTtcclxuICAgICAgICByZXR1cm4gcmVzO1xyXG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgICAgICBjb25zb2xlLmVycm9yKFwiRmFpbGVkIHRvIGZldGNoIFhNTCBkYXRhOlwiLCBlcnJvcik7XHJcbiAgICAgICAgdGhyb3cgZXJyb3I7XHJcbiAgICB9IGZpbmFsbHkge1xyXG4gICAgICAgIGNsaWVudC5yZWxlYXNlKCk7XHJcbiAgICB9XHJcbn1cclxuXHJcbmFzeW5jIGZ1bmN0aW9uIG1vZGlmeVhNTEFtb3VudChpbnZvaWNlSWQsIE5ld0Ftb3VudCkge1xyXG4gICAgY29uc3QgY2xpZW50ID0gYXdhaXQgcG9vbC5jb25uZWN0KCk7XHJcbiAgICB0cnkge1xyXG4gICAgICAgIGNvbnN0IGludm9pY2UgPSBhd2FpdCBjbGllbnQucXVlcnkoXCJTRUxFQ1QgKiBGUk9NIGludm9pY2VzIGkgV0hFUkUgaS5pbnZvaWNlSWQgPSAkMVwiLCBbaW52b2ljZUlkXSk7XHJcbiAgICAgICAgY29uc3QgeG1sID0gaW52b2ljZS5yb3dzWzBdLmludm9pY2U7XHJcbiAgICAgICAgbGV0IHVwZGF0ZWRYbWxTdHJpbmc7XHJcbiAgICAgICAgcGFyc2VTdHJpbmcoeG1sLCBmdW5jdGlvbiAoZXJyLCByZXN1bHQpIHtcclxuICAgICAgICAgICAgcmVzdWx0Lmludm9pY2UuYW1vdW50ID0gTmV3QW1vdW50O1xyXG4gICAgICAgICAgICBjb25zdCBidWlsZGVyID0gbmV3IHhtbDJqcy5CdWlsZGVyKCk7XHJcbiAgICAgICAgICAgIHVwZGF0ZWRYbWxTdHJpbmcgPSBidWlsZGVyLmJ1aWxkT2JqZWN0KHJlc3VsdCk7XHJcbiAgICAgICAgfSk7XHJcbiAgICAgICAgYXdhaXQgY2xpZW50LnF1ZXJ5KFwiVVBEQVRFIGludm9pY2VzIFNFVCBpbnZvaWNlID0gJDEgV0hFUkUgaW52b2ljZWlkID0gJDJcIiwgW3VwZGF0ZWRYbWxTdHJpbmcsIGludm9pY2VJZF0pO1xyXG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgICAgICBjb25zb2xlLmVycm9yKFwiRmFpbGVkIHRvIHVwZGF0ZSBYTUwgYW1vdW50OlwiLCBlcnJvcik7XHJcbiAgICAgICAgdGhyb3cgZXJyb3I7XHJcbiAgICB9IGZpbmFsbHkge1xyXG4gICAgICAgIGNsaWVudC5yZWxlYXNlKCk7XHJcbiAgICB9XHJcbn1cclxuXHJcbmFzeW5jIGZ1bmN0aW9uIG1vZGlmeVhNTE5hbWUoaW52b2ljZUlkLCBOZXdOYW1lKSB7XHJcbiAgICBjb25zdCBjbGllbnQgPSBhd2FpdCBwb29sLmNvbm5lY3QoKTtcclxuICAgIHRyeSB7XHJcbiAgICAgICAgY29uc3QgaW52b2ljZSA9IGF3YWl0IGNsaWVudC5xdWVyeShcIlNFTEVDVCAqIEZST00gaW52b2ljZXMgaSBXSEVSRSBpLmludm9pY2VJZCA9ICQxXCIsIFtpbnZvaWNlSWRdKTtcclxuICAgICAgICBjb25zdCB4bWwgPSBpbnZvaWNlLnJvd3NbMF0uaW52b2ljZTtcclxuICAgICAgICBsZXQgdXBkYXRlZFhtbFN0cmluZztcclxuICAgICAgICBwYXJzZVN0cmluZyh4bWwsIGZ1bmN0aW9uIChlcnIsIHJlc3VsdCkge1xyXG4gICAgICAgICAgICByZXN1bHQuaW52b2ljZS5pbnZvaWNlTmFtZSA9IE5ld05hbWU7XHJcbiAgICAgICAgICAgIGNvbnN0IGJ1aWxkZXIgPSBuZXcgeG1sMmpzLkJ1aWxkZXIoKTtcclxuICAgICAgICAgICAgdXBkYXRlZFhtbFN0cmluZyA9IGJ1aWxkZXIuYnVpbGRPYmplY3QocmVzdWx0KTtcclxuICAgICAgICB9KTtcclxuICAgICAgICBhd2FpdCBjbGllbnQucXVlcnkoXCJVUERBVEUgaW52b2ljZXMgU0VUIGludm9pY2UgPSAkMSBXSEVSRSBpbnZvaWNlaWQgPSAkMlwiLCBbdXBkYXRlZFhtbFN0cmluZywgaW52b2ljZUlkXSk7XHJcbiAgICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgICAgIGNvbnNvbGUuZXJyb3IoXCJGYWlsZWQgdG8gdXBkYXRlIFhNTCBhbW91bnQ6XCIsIGVycm9yKTtcclxuICAgICAgICB0aHJvdyBlcnJvcjtcclxuICAgIH0gZmluYWxseSB7XHJcbiAgICAgICAgY2xpZW50LnJlbGVhc2UoKTtcclxuICAgIH1cclxufVxyXG5cclxuYXN5bmMgZnVuY3Rpb24gbW9kaWZ5WE1MRGF0ZShpbnZvaWNlSWQsIE5ld0RhdGUpIHtcclxuICAgIGNvbnN0IGNsaWVudCA9IGF3YWl0IHBvb2wuY29ubmVjdCgpO1xyXG4gICAgdHJ5IHtcclxuICAgICAgICBjb25zdCBpbnZvaWNlID0gYXdhaXQgY2xpZW50LnF1ZXJ5KFwiU0VMRUNUICogRlJPTSBpbnZvaWNlcyBpIFdIRVJFIGkuaW52b2ljZUlkID0gJDFcIiwgW2ludm9pY2VJZF0pO1xyXG4gICAgICAgIGNvbnN0IHhtbCA9IGludm9pY2Uucm93c1swXS5pbnZvaWNlO1xyXG4gICAgICAgIGxldCB1cGRhdGVkWG1sU3RyaW5nO1xyXG4gICAgICAgIHBhcnNlU3RyaW5nKHhtbCwgZnVuY3Rpb24gKGVyciwgcmVzdWx0KSB7XHJcbiAgICAgICAgICAgIHJlc3VsdC5pbnZvaWNlLmRhdGUgPSBOZXdEYXRlO1xyXG4gICAgICAgICAgICBjb25zdCBidWlsZGVyID0gbmV3IHhtbDJqcy5CdWlsZGVyKCk7XHJcbiAgICAgICAgICAgIHVwZGF0ZWRYbWxTdHJpbmcgPSBidWlsZGVyLmJ1aWxkT2JqZWN0KHJlc3VsdCk7XHJcbiAgICAgICAgfSk7XHJcbiAgICAgICAgYXdhaXQgY2xpZW50LnF1ZXJ5KFwiVVBEQVRFIGludm9pY2VzIFNFVCBpbnZvaWNlID0gJDEgV0hFUkUgaW52b2ljZWlkID0gJDJcIiwgW3VwZGF0ZWRYbWxTdHJpbmcsIGludm9pY2VJZF0pO1xyXG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgICAgICBjb25zb2xlLmVycm9yKFwiRmFpbGVkIHRvIHVwZGF0ZSBYTUwgYW1vdW50OlwiLCBlcnJvcik7XHJcbiAgICAgICAgdGhyb3cgZXJyb3I7XHJcbiAgICB9IGZpbmFsbHkge1xyXG4gICAgICAgIGNsaWVudC5yZWxlYXNlKCk7XHJcbiAgICB9XHJcbn1cclxuXHJcbm1vZHVsZS5leHBvcnRzID0geyBnZW5lcmF0ZVRva2VuLCB0b2tlbklzVmFsaWQsIGdlbmVyYXRlVG9rZW5WMiwgdG9rZW5Jc1ZhbGlkVjIsIGZldGNoWE1MRGF0YSwgbW9kaWZ5WE1MQW1vdW50LCBtb2RpZnlYTUxOYW1lLCBtb2RpZnlYTUxEYXRlIH07Il0s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